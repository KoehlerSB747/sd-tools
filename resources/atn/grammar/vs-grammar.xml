<?xml version="1.0" encoding="utf-8" ?>

<grammar>

	<classifiers>
    <vs-tok>
      <jclass>org.sd.atn.RoteListClassifier</jclass>
      <classifiers>
        <feature name='auxv' type='string' when='equals'>_wn_cat</feature>
        <feature name='modal' type='string' when='equals'>_wn_cat</feature>
        <feature name='verb' type='string' when='equals'>_wn_cat</feature>
        <feature name='adv' type='string' when='equals'>_wn_cat</feature>
        <feature name='unknown' type='string' when='equals'>_wn_cat</feature>
      </classifiers>
    </vs-tok>

    <!-- syntactic categories -->
    <wn-verb>
      <jclass>org.sd.atn.RoteListClassifier</jclass>
      <classifiers>
        <feature name='verb' type='string' when='equals' verbose="false">_wn_cat</feature>
        <feature name='unknown' type='string' when='equals' verbose="false">_wn_cat</feature>
      </classifiers>
    </wn-verb>

	</classifiers>

	<rules>

    <VS start="true" id="VS">
      <vs-tok repeats="true" verbose="false">
        <!-- uninterrupted by delimiters -->
        <predelim>
          <repeatCheck>1-</repeatCheck>
          <disallowall />
        </predelim>
        <!-- each token must progress in type -->
        <test ignoreFirstToken="true" revise="false" verbose="false">
          <jclass>org.sd.atnexec.ProgressionTokenTest</jclass>
          <seq order="modal,auxv,verb" />
          <seq reject="auxv" after="!auxv" />
          <seq reject="noun" after="noun" />
          <seq reject="verb" after="noun" />
        </test>
      </vs-tok>

      <!-- step to verify that the repeats ended on a good note -->
      <verify terminal="true" ignoreToken="true" consumeToken="false" verbose="false" popTest="true">
        <!-- last token must be possible verb -->
        <test revise="false" verbose="false">
          <jclass>org.sd.atn.TokenTest</jclass>
          <classifier cat="wn-verb" />
        </test>
      </verify>
    </VS>

	</rules>

</grammar>
