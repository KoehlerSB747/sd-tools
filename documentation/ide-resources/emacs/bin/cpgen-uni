#!/bin/bash
#
# cpgen-uni
# by Spence Koehler
#
# Script to generate the classpath for an ant or maven project based on a file
# or directory. Executes a maven or ant build depending on finding a pom.xml
# or build.xml, whichever comes first.
#
# arg : [optional -- defaults to current working directory] path to file or
#                    directory in project.
#
# switches:
#   -b : switch to a "build" classpath for remaining projects
#   -r : (default) switch to a "runtime" classpath for remaining projects
#

# default to runtime classpath
cpcmdant=print-classpath

arg="$1";

for x in $@; do
  if test "$x" == "-b"; then
    cpcmdant=print-classpath-build;
    arg="";
  elif test "$x" == "-r"; then
    cpcmdant=print-classpath;
    arg="";
  else
    arg="$x";
  fi
done

# cd to arg's directory, if present
if test -n "$arg"; then
  dest="$arg";
  if ! test -d "$dest"; then dest=`dirname $dest`; fi
  cd "$dest";
fi

# search for parent dir w/pom.xml or build.xml
while ! test -e "./pom.xml" && ! test -e "./build.xml" && test `pwd` != "/"; do cd ..; done

# move up to highest consecutive dir w/pom.xml
while test -e "./pom.xml" && test -e "../pom.xml" && test `pwd` != "/"; do cd ..; done

# get project classpath
if test -e "./pom.xml"; then

  # get current/active build classes
  curdir=`pwd`;
  active="";
  for x in `find $curdir -name "*classes*"`; do
    test -n "$active" && active="${active}:";
    active="${active}$x";
  done

  # get maven classpath
  cp=`mvn -o dependency:build-classpath | grep ^/ | head -n1`

  echo ${active}:${cp}
elif test -e "./build.xml"; then
  ant "$cpcmdant" | grep CLASSPATH | sed 's/.* \(.*\)/\1/; s/\\/\//g' | dedup.pl | sed 's/:$//';
else
  exit 1;
fi
